//
//  MeditationPresenter.swift
//  TalkToBudda
//
//  Created by mac on 6/5/25.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import RxSwift
import RxCocoa

protocol MeditationMoodPresentable: AnyObject {
    func viewDidLoad()
    func didSelectMood(_ mood: Mood)
    func didTapStartMeditation()
    func getMediation(at indexPath: IndexPath) -> MeditationCodable?
    
}

final class MeditationMoodPresenter: MeditationMoodPresentable {
    weak var view: MeditationMoodViewable?
    var interactor: MeditationMoodInteractable?
    var router: MeditationMoodRoutable?
    var meditations: [MeditationCodable] = []

    func viewDidLoad() {
        interactor?.fetchUserInfo()
        
        guard let url = Bundle.main.url(forResource: "buddhist_meditation_types.json", withExtension: nil) else { return }
        guard let data = try? Data(contentsOf: url) else { return }
        
        meditations = (try? JSONDecoder().decode([MeditationCodable].self, from: data)) ?? []
        view?.reloadTableView()
    }

    func didSelectMood(_ mood: Mood) {
        view?.updateSelectedMood(mood)
    }

    func didTapStartMeditation() {
        router?.navigateToMeditation()
    }
    
    func getMediation(at indexPath: IndexPath) -> MeditationCodable? {
        guard indexPath.row < meditations.count else { return nil }
        return meditations[indexPath.row]
    }
}

extension MeditationMoodPresenter: MeditationMoodInteractorOutput {
    func didFetchUserInfo(name: String) {
        
    }
}
